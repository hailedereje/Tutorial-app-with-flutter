// Mocks generated by Mockito 5.2.0 from annotations
// in softwaretutorials/test/infrastructure/project_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:softwaretutorials/domain/core/models.dart' as _i3;
import 'package:softwaretutorials/infrastructure/local_repository/local_data_provider.dart'
    as _i2;
import 'package:softwaretutorials/infrastructure/local_repository/tutorial_local_repository.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeLocalDataProvider_0 extends _i1.Fake
    implements _i2.LocalDataProvider {}

class _FakeTutorial_1 extends _i1.Fake implements _i3.Tutorial {}

/// A class which mocks [TutorialLocalRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTutorialLocalRepository extends _i1.Mock
    implements _i4.TutorialLocalRepository {
  MockTutorialLocalRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LocalDataProvider get dbProvider =>
      (super.noSuchMethod(Invocation.getter(#dbProvider),
          returnValue: _FakeLocalDataProvider_0()) as _i2.LocalDataProvider);
  @override
  _i5.Future<int> createTutorial(_i3.Tutorial? tutorial) =>
      (super.noSuchMethod(Invocation.method(#createTutorial, [tutorial]),
          returnValue: Future<int>.value(0)) as _i5.Future<int>);
  @override
  _i5.Future<List<_i3.Tutorial>> getAllTutorials() =>
      (super.noSuchMethod(Invocation.method(#getAllTutorials, []),
              returnValue: Future<List<_i3.Tutorial>>.value(<_i3.Tutorial>[]))
          as _i5.Future<List<_i3.Tutorial>>);
  @override
  _i5.Future<int> updateTutorial(_i3.Tutorial? tutorial) =>
      (super.noSuchMethod(Invocation.method(#updateTutorial, [tutorial]),
          returnValue: Future<int>.value(0)) as _i5.Future<int>);
  @override
  _i5.Future<int> toggleEnrollement(_i3.Tutorial? tutorial) =>
      (super.noSuchMethod(Invocation.method(#toggleEnrollement, [tutorial]),
          returnValue: Future<int>.value(0)) as _i5.Future<int>);
  @override
  _i5.Future<int> submitProject(_i3.Tutorial? tutorial) =>
      (super.noSuchMethod(Invocation.method(#submitProject, [tutorial]),
          returnValue: Future<int>.value(0)) as _i5.Future<int>);
  @override
  _i5.Future<int> deleteTutorial(int? tutorialId) =>
      (super.noSuchMethod(Invocation.method(#deleteTutorial, [tutorialId]),
          returnValue: Future<int>.value(0)) as _i5.Future<int>);
  @override
  _i5.Future<_i3.Tutorial> getTutorial(int? tutorialId) =>
      (super.noSuchMethod(Invocation.method(#getTutorial, [tutorialId]),
              returnValue: Future<_i3.Tutorial>.value(_FakeTutorial_1()))
          as _i5.Future<_i3.Tutorial>);
  @override
  _i5.Future<int> removeTables() =>
      (super.noSuchMethod(Invocation.method(#removeTables, []),
          returnValue: Future<int>.value(0)) as _i5.Future<int>);
}
