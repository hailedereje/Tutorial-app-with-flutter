// Mocks generated by Mockito 5.2.0 from annotations
// in softwaretutorials/test/application/authentication_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:softwaretutorials/infrastructure/auth/authentication_service.dart'
    as _i3;
import 'package:softwaretutorials/infrastructure/local_repository/tutorial_local_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTutorialLocalRepository_0 extends _i1.Fake
    implements _i2.TutorialLocalRepository {}

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i3.AuthenticationRepository {
  MockAuthenticationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TutorialLocalRepository get tutorialLocalRepository =>
      (super.noSuchMethod(Invocation.getter(#tutorialLocalRepository),
              returnValue: _FakeTutorialLocalRepository_0())
          as _i2.TutorialLocalRepository);
  @override
  _i4.Future<bool> authenticateUser({String? username, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(#authenticateUser, [],
              {#username: username, #password: password}),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> getLoginStatus() =>
      (super.noSuchMethod(Invocation.method(#getLoginStatus, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
